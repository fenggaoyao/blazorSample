@inject IModel  Model

<div class="unit">
    <div class="label">体重 (@MinWeight - @MaxWeight):</div>
    <div class="labelTarget">
        <input type="number"
               class="@InputClass"
               bind="@WeightAmt" /> @WeightUom
        </div>
    </div>

    @functions {

        protected override void OnAfterRender()
        {
            Model.Register(() =>
            {
                _weight = Model.IsImperial ? (int)Model.WeightPounds :
                    (int)(Model.PoundsToKilograms(Model.WeightPounds));
                base.StateHasChanged();
            });
            base.OnAfterRender();
        }

        protected override void OnInit()
        {
            base.OnInit();
            _weight = (int)(Math.Round(Model.WeightPounds));
        }

        bool ErrorState = false;

        string InputClass
        {
            get
            {
                return ErrorState ? "error" : string.Empty;
            }
        }

        int MinWeight
        {
            get
            {
                return Model.IsImperial ? Globals.MinWeightPounds : 
                    Globals.MinWeightKilograms;
            }
        }

        int MaxWeight
        {
            get
            {
                return Model.IsImperial ? Globals.MaxWeightPounds : 
                    Globals.MaxWeightKilograms;
            }
        }

        int _weight;

        int WeightAmt
        {
            get
            {
                return _weight;
            }

            set
            {
                if (value != _weight)
                {
                    _weight = value;
                    if (Model.IsImperial)
                    {
                        if (value < Globals.MinWeightPounds || value > Globals.MaxWeightPounds)
                        {
                            ErrorState = true;
                        }
                        else
                        {
                            ErrorState = false;
                            Model.WeightPounds = value;
                        }
                    }
                    else
                    {
                        if (value < Globals.MinWeightKilograms || value > Globals.MaxWeightKilograms)
                        {
                            ErrorState = true;
                        }
                        else
                        {
                            ErrorState = false;
                            Model.WeightPounds = Model.KilogramsToPounds(value);
                        }
                    }
                }
            }
        }

        string WeightUom
        {
            get
            {
                return Model.IsImperial ? "磅" : "公斤";
            }
        }
}